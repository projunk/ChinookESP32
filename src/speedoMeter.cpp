#include <functions.h>


// https://www.jqueryscript.net/form/Creating-An-Animated-Speedometer-with-jQuery-CSS3.html    


String getSpeedoMeterStyle() {    
    String s = "<style>";

    s += "/*!";
    s += "	*speedometer.css";
    s += "	*author: Manivannan R";
    s += "	*project: Speedometer";
    s += "*/";
    s += "";
    s += ".speedometer {";
    s += "	background:#0F0F0F;";
    s += "	position: relative;";
    s += "	";
    s += "	border-radius:50%;";
    s += "}";
    s += ".speedometer .speedNobe{";
    s += "	position:absolute;";
    s += "	width:100%;";
    s += "	z-index:10;	";
    s += "	transition: all 1s;";
    s += "}";
    s += ".speedometer .speedPosition {";
    s += "	position: absolute;";
    s += "	text-align: center;";
    s += "	line-height: 80PX;";
    s += "	font-family:arial;";
    s += "	font-size: 30px;";
    s += "	font-weight:bold;";
    s += "	border-radius: 50%;";
    s += "	";
    s += "	background: #191919;";
    s += "	color: #FFF;";
    s += "	box-shadow: 0 0 3px 3px black;";
    s += "}";
    s += ".speedometer .fonts{";
    s += "	font-family:arial;";
    s += "	font-weight:bold;";
    s += "	width:100%;";
    s += "	text-align:center;";
    s += "}";
    s += "";
    s += ".speedometer .speedNobe div{";
    s += "	background: #48a3cb;";
    s += "	position: absolute;";
    s += "	height: 100%;";
    s += "	top: 0;";
    s += "}";
    s += ".speedometer .numb,.nob{";
    s += "	transition: opacity 1s;";
    s += "	position: absolute;";
    s += "	opacity: 0.5;";
    s += "}";
    s += ".speedometer .nob{";
    s += "	background:#eee;";
    s += "	box-shadow: 0 0 2px 1px #eee;";
    s += "}";
    s += ".speedometer .numb{";
    s += "	";
    s += "	color:#eee;";
    s += "	text-align: left;";
    s += "	overflow: hidden;";
    s += "	opacity: 0.5;";
    s += "	font-family: arial;";
    s += "	font-size: 16px;";
    s += "	font-weight: bold;";
    s += "}";
    s += ".speedometer .nob.bright{";
    s += "	opacity: 1;";
    s += "}";
    s += ".speedometer .nob.danger{";
    s += "	background:#FF113A;";
    s += "	box-shadow: 0 0 2px 1px #FF113A;";
    s += "}";
    s += ".speedometer .numb.bright{";
    s += "	opacity: 1;";
    s += "}";
    s += ".speedometer .numb.danger{";
    s += "	color: #FF113A;";
    s += "}";

    s += "</style>";

    return s;
}


String getSpeedoMeterFunctions() {
    String s = "";

    s += "/*!";
    s += "	*speedometer.js";
    s += "	*author: Manivannan R";
    s += "	*project: Speedometer";
    s += "*/";
    s += "";
    s += "function speedometer(userPref){";
    s += "  this._speedometerProperty = {";
    s += "    id                  : 'speedometer-cnt-' + Math.floor(Math.random() * 100000) + 1,  ";
    s += "                                              /**Speedometer container id*/";
    s += "    maxVal              : 180,                /**Max value of the meter*/";
    s += "    divFact             : 10,                 /**Division value of the meter*/";
    s += "    dangerLevel         : 120,                /**more than this leval, color will be red*/";
    s += "    initDeg             : -45,                /**reading begins angle*/";
    s += "    maxDeg              : 270,                /**total angle of the meter reading*/";
    s += "    ";
    s += "    speedNobeH          : 4,                  /**speed nobe height*/";
    s += "    speedoNobeW         : 95,                 /**speed nobe width*/";
    s += "    speedoNobeL         : 13,                 /**speed nobe left position*/";
    s += "    ";
    s += "    edgeRadius          : 150,                /**radius of the meter circle*/";
    s += "    indicatorRadius     : 125,                /**radius of indicators position*/";
    s += "    indicatorNumbRadius : 90,                 /**radius of numbers position*/";
    s += "    ";
    s += "    speedPositionTxtWH  : 80,                 /**speedo-meter current value cont*/";
    s += "    ";
    s += "    nobW                : 20,                 /**indicator nob width*/";
    s += "    nobH                : 4,                  /**indicator nob height*/";
    s += "    ";
    s += "    numbW               : 30,                 /**indicator number width*/";
    s += "    numbH               : 16,                 /**indicator number height*/";
    s += "    ";
    s += "    midNobW             : 10,                 /**indicator mid nob width*/";
    s += "    midNobH             : 3,                  /**indicator mid nob height*/";
    s += "    ";
    s += "    noOfSmallDiv        : 2,                  /**no of small div between main div*/";
    s += "    multiplier          : 1,                  /**Center value multiplier e.g. 1 x 1000 RPM*/	";
    s += "    ";
    s += "    gagueLabel          : 'km/h',             /**Label on guage Face*/	";
    s += "    ";
    s += "    initVal             : 0,                  /**Initial value*/";
    s += "";
    s += "    dangerColor         : '#FF113A',          /**Danger speed color (red)*/";
    s += "    bgColor             : '#0F0F0F',          /**Speedometer background color */";
    s += "    speedValBGColor     : '#191919',          /**Center speed value background color */";
    s += "    speedValTxtColor    : '#fff',             /**Center speed value color */";
    s += "    speedArrowColor     : '#48a3cb',          /**Speed indicator arrow color */";
    s += "    nobNumbColor        : '#eee',             /**Indicator Nob number color around circle */";
    s += "  };";
    s += "  if(typeof userPref === 'object'){";
    s += "    for (var prop in userPref) {";
    s += "      this._speedometerProperty[prop] = userPref[prop];";
    s += "    }";
    s += "  }";
    s += "  ";
    s += "  this.elm = null;";
    s += "  ";
    s += "  this._noOfDev = this._speedometerProperty.maxVal/this._speedometerProperty.divFact;";
    s += "  this._speedPointerArrow = null;";
    s += "  this._speedValueInNumeric = null;";
    s += "  this._speedNobNumbHolder = [];";
    s += "";
    s += "  this._creatHtmlsElecments();";
    s += "  this.setPosition(this._speedometerProperty.initVal);";
    s += "}";
    s += "";
    s += "";
    s += "";
    s += "/**";
    s += " * var element = _createElm({";
    s += " *    elmType : 'div',";
    s += " *    attrs: {";
    s += " *      class: 'class-name',";
    s += " *      id: 'elementid'";
    s += " *    },";
    s += " *    'html' : '<span> Text </span>',";
    s += " *    'text' : 'text',";
    s += " *    children: [{";
    s += " *      elmType : 'span',";
    s += " *      attrs: {";
    s += " *        class: 'child-class-name',";
    s += " *        id: 'childelementid'";
    s += " *      },";
    s += " *      'html' : '<span> child Text </span>',";
    s += " *      'text' : 'child text',";
    s += " *      children: [{...}, ...]";
    s += " *    }]";
    s += " * })";
    s += " */";
    s += "speedometer.prototype._createElm = function(metedata) {";
    s += "";
    s += "  function _isElementOrTxt(element) {";
    s += "    return _isElement(element) || typeof element === 'string';";
    s += "  }";
    s += "  ";
    s += "  function _isElement(element) {";
    s += "    return element instanceof Element || element instanceof HTMLDocument;";
    s += "  }";
    s += "";
    s += "  ";
    s += "  if (!metedata || _isElementOrTxt(metedata)) {";
    s += "      return metedata;";
    s += "  }";
    s += "";
    s += "  var $elm = document.createElement(metedata.elmType);";
    s += "";
    s += "  ";
    s += "  if (metedata.attrs) {";
    s += "      for (var i in metedata.attrs) {";
    s += "          $elm.setAttribute(i, metedata.attrs[i]);";
    s += "      }";
    s += "  }";
    s += "";
    s += "  ";
    s += "  if (metedata.text) $elm.innerText = metedata.text;";
    s += "";
    s += "  ";
    s += "  if (metedata.html) $elm.innerHTML = metedata.html;";
    s += "";
    s += "  ";
    s += "  if (metedata.children) {";
    s += "      for (var j in metedata.children) {";
    s += "          var chaild = this._createElm(metedata.children[j]);";
    s += "          if(chaild){";
    s += "            $elm.append(chaild);";
    s += "          }";
    s += "      }";
    s += "  }";
    s += "";
    s += "  ";
    s += "";
    s += "  return $elm;";
    s += "};";
    s += "";
    s += "speedometer.prototype._addClass = function (elm, className){";
    s += "  var newClass = elm.getAttribute('class').replace(new RegExp(className, 'g'), '') + ' ' + className;";
    s += "  elm.setAttribute('class', newClass);";
    s += "};";
    s += "";
    s += "speedometer.prototype._removeClass = function (elm, className){";
    s += "  var newClass = elm.getAttribute('class').replace(new RegExp(className, 'g'), '');";
    s += "  elm.setAttribute('class', newClass);";
    s += "};";
    s += "";
    s += "speedometer.prototype._creatHtmlsElecments = function(){";
    s += "  this.elm = this._createElm({";
    s += "    elmType: 'div',";
    s += "    attrs:{";
    s += "      id: this._speedometerProperty.id,";
    s += "      class: 'speedometer'";
    s += "    }";
    s += "  });";
    s += "  this._setCssProperty();";
    s += "  this._createIndicators();";
    s += "};";
    s += "";
    s += "speedometer.prototype._setCssProperty = function() {";
    s += "  ";
    s += "  var speedoWH       = this._speedometerProperty.edgeRadius*2,";
    s += "  speedNobeTop       = this._speedometerProperty.edgeRadius - this._speedometerProperty.speedNobeH/2,";
    s += "  speedNobeAngle     = this._speedometerProperty.initDeg,";
    s += "  speedPositionTxtTL = this._speedometerProperty.edgeRadius - this._speedometerProperty.speedPositionTxtWH/2;";
    s += "  ";
    s += "  var cssIdSelector = '#' + this._speedometerProperty.id;";
    s += "  var tempStyleVar = [";
    s += "    cssIdSelector + '.speedometer{',";
    s += "      'width  :'+ speedoWH + 'px;',";
    s += "      'height :'+ speedoWH + 'px;',";
    s += "    '}',";
    s += "    cssIdSelector + ' .speedNobe{',";
    s += "      'height            :'+ this._speedometerProperty.speedNobeH + 'px;',";
    s += "      'top               :'+ speedNobeTop + 'px;',";
    s += "      'transform         :rotate('+speedNobeAngle+'deg);',";
    s += "      '-webkit-transform :rotate('+speedNobeAngle+'deg);',";
    s += "      '-moz-transform    :rotate('+speedNobeAngle+'deg);',";
    s += "      '-o-transform      :rotate('+speedNobeAngle+'deg);',";
    s += "    '}',";
    s += "    cssIdSelector + ' .speedPosition{',";
    s += "      'width  :'+this._speedometerProperty.speedPositionTxtWH + 'px;',";
    s += "      'height :'+this._speedometerProperty.speedPositionTxtWH + 'px;',";
    s += "      'top  :'+speedPositionTxtTL + 'px;',";
    s += "      'left :'+speedPositionTxtTL + 'px;',";
    s += "    '}',";
    s += "    cssIdSelector + ' .speedNobe div{',";
    s += "      'width  :'+ this._speedometerProperty.speedoNobeW + 'px;',";
    s += "      'left :'+ this._speedometerProperty.speedoNobeL + 'px;',";
    s += "    '}',      ";
    s += "    cssIdSelector + ' .nob{',";
    s += "      'width  :'+ this._speedometerProperty.nobW + 'px;',";
    s += "      'height :'+ this._speedometerProperty.nobH + 'px;',";
    s += "    '}',";
    s += "    cssIdSelector + ' .numb{',";
    s += "      'width  :'+ this._speedometerProperty.numbW + 'px;',";
    s += "      'height :'+ this._speedometerProperty.numbH + 'px;',";
    s += "    '}',";
    s += "    cssIdSelector + ' .midNob{',";
    s += "      'width  :'+ this._speedometerProperty.midNobW + 'px;',";
    s += "      'height :'+ this._speedometerProperty.midNobH + 'px;',";
    s += "    '}',";
    s += "";
    s += "    ";
    s += "    cssIdSelector + '.speedometer{',";
    s += "      'background:'+ this._speedometerProperty.bgColor +';',";
    s += "    '}',";
    s += "      cssIdSelector + '.speedometer .speedPosition{',";
    s += "      'background:'+ this._speedometerProperty.speedValBGColor +';',";
    s += "      'color:'+ this._speedometerProperty.speedValTxtColor +';',";
    s += "      'box-shadow: 0 0 3px 3px ' + this._speedometerProperty.speedValBGColor + ';',";
    s += "    '}',";
    s += "    cssIdSelector + '.speedometer .speedNobe div{',";
    s += "      'background:'+ this._speedometerProperty.speedArrowColor +';',";
    s += "    '}',";
    s += "    cssIdSelector + '.speedometer .nob{',";
    s += "      'background:'+ this._speedometerProperty.nobNumbColor +';',";
    s += "      'box-shadow: 0 0 2px 1px ' + this._speedometerProperty.nobNumbColor +';',";
    s += "    '}',";
    s += "    cssIdSelector + '.speedometer .numb{',";
    s += "      'color:'+ this._speedometerProperty.nobNumbColor +';',";
    s += "    '}',";
    s += "    cssIdSelector + '.speedometer .nob.danger{',";
    s += "      'background:'+ this._speedometerProperty.dangerColor +';',";
    s += "      'box-shadow: 0 0 2px 1px ' + this._speedometerProperty.dangerColor +';',";
    s += "    '}',";
    s += "    cssIdSelector + '.speedometer .numb.danger{',";
    s += "      'color:'+ this._speedometerProperty.dangerColor +';',";
    s += "    '}',";
    s += "";
    s += "  ].join('');";
    s += "";
    s += "  var styleElm = this._createElm({";
    s += "    elmType: 'style',";
    s += "    attrs:{},";
    s += "    html: tempStyleVar";
    s += "  });";
    s += "";
    s += "  this.elm.append(styleElm);    ";
    s += "};";
    s += "";
    s += "speedometer.prototype._createIndicators = function(){";
    s += "  var divDeg = this._speedometerProperty.maxDeg/this._noOfDev,";
    s += "  induCatorLinesPosLeft,induCatorLinesPosTop,induCatorNumbPosLeft,induCatorNumbPosTop,";
    s += "  envelopeElm = this.elm;";
    s += "";
    s += "  for(var i=0; i<=this._noOfDev; i++) {";
    s += "    var curDig = this._speedometerProperty.initDeg + i*divDeg;";
    s += "    var curIndVal = i*this._speedometerProperty.divFact;";
    s += "    var dangCls = curIndVal >= this._speedometerProperty.dangerLevel ? \"danger\" : \"\";";
    s += "    ";
    s += "    var induCatorLinesPosY = this._speedometerProperty.indicatorRadius * Math.cos( 0.01746 * curDig);";
    s += "    var induCatorLinesPosX = this._speedometerProperty.indicatorRadius * Math.sin( 0.01746 * curDig);";
    s += "    ";
    s += "    var induCatorNumbPosY = this._speedometerProperty.indicatorNumbRadius * Math.cos( 0.01746 * curDig);";
    s += "    var induCatorNumbPosX = this._speedometerProperty.indicatorNumbRadius * Math.sin( 0.01746 * curDig);";
    s += "    ";
    s += "    induCatorNumbPosLeft = (this._speedometerProperty.edgeRadius - induCatorNumbPosX) - (this._speedometerProperty.numbW/2);";
    s += "    induCatorNumbPosTop  = (this._speedometerProperty.edgeRadius - induCatorNumbPosY) - (this._speedometerProperty.numbH/2);";
    s += "";
    s += "    var nob, numb;";
    s += "";
    s += "    var isSuperNob = i%this._speedometerProperty.noOfSmallDiv === 0; ";
    s += "";
    s += "    if(isSuperNob){";
    s += "      induCatorLinesPosLeft = (this._speedometerProperty.edgeRadius - induCatorLinesPosX )-2;";
    s += "      induCatorLinesPosTop  = (this._speedometerProperty.edgeRadius - induCatorLinesPosY)-10;";
    s += "      induCatorNumbPosLeft = (this._speedometerProperty.edgeRadius - induCatorNumbPosX) - (this._speedometerProperty.numbW/2);";
    s += "      induCatorNumbPosTop  = (this._speedometerProperty.edgeRadius - induCatorNumbPosY) - (this._speedometerProperty.numbH/2);";
    s += "    } else {";
    s += "      induCatorLinesPosLeft = (this._speedometerProperty.edgeRadius - induCatorLinesPosX )-(this._speedometerProperty.midNobH/2);";
    s += "      induCatorLinesPosTop = (this._speedometerProperty.edgeRadius - induCatorLinesPosY)-(this._speedometerProperty.midNobW/2);";
    s += "    }";
    s += "";
    s += "    nob = this._createElm({";
    s += "      elmType: 'div',";
    s += "      attrs: {";
    s += "        class: \"nob \"+ dangCls + (isSuperNob? '' : ' midNob'),";
    s += "        style: \"left:\"+induCatorLinesPosTop+\"px;top:\"+induCatorLinesPosLeft+\"px;\"+'transform:rotate('+curDig+'deg);'";
    s += "      }";
    s += "    });";
    s += "";
    s += "    numb = this._createElm({";
    s += "      elmType: 'div',";
    s += "      attrs: {";
    s += "        class: \"numb \"+dangCls,";
    s += "        style: \"left:\" + induCatorNumbPosTop + \"px;top:\" + induCatorNumbPosLeft + \"px;\"";
    s += "      },";
    s += "      html: isSuperNob ? String(curIndVal) : '' ";
    s += "    });";
    s += "";
    s += "    this._speedNobNumbHolder.push({";
    s += "      nob  : nob,";
    s += "      numb : numb";
    s += "    });";
    s += "";
    s += "    ";
    s += "    envelopeElm.append(nob, numb);";
    s += "";
    s += "  }";
    s += "  ";
    s += "  ";
    s += "  this._speedPointerArrow = this._createElm({";
    s += "    elmType: 'div',";
    s += "    attrs: {";
    s += "      class: 'speedNobe'";
    s += "    },";
    s += "    html: '<div></div>'";
    s += "  });";
    s += "";
    s += "  ";
    s += "  this._speedValueInNumeric = this._createElm({";
    s += "    elmType: 'div',";
    s += "    attrs: {";
    s += "      class: 'speedPosition'";
    s += "    }";
    s += "  });";
    s += "";
    s += "  envelopeElm.append(this._speedPointerArrow);";
    s += "  envelopeElm.append(this._speedValueInNumeric);";
    s += "  ";
    s += "};";
    s += "";
    s += "speedometer.prototype.setPosition = function (speed){   ";
    s += "";
    s += "  if(speed > this._speedometerProperty.maxVal){";
    s += "    speed = this._speedometerProperty.maxVal;";
    s += "  }";
    s += "  if(speed < 0 || isNaN(speed)){";
    s += "    speed = 0;";
    s += "  }";
    s += "  var speedInDeg = (this._speedometerProperty.maxDeg/this._speedometerProperty.maxVal)*speed + this._speedometerProperty.initDeg;";
    s += "  ";
    s += "  ";
    s += "  this._speedPointerArrow.style.transform = 'rotate('+speedInDeg+'deg)';";
    s += "  ";
    s += "  ";
    s += "  var centerVal = speed *  this._speedometerProperty.multiplier;";
    s += "  this._speedValueInNumeric.innerHTML = centerVal + \"<br />\" + this._speedometerProperty.gagueLabel;";
    s += "";
    s += "  ";
    s += "  for(var i=0; i<=this._noOfDev; i++){";
    s += "    var speedNobNumb = this._speedNobNumbHolder[i];";
    s += "    if(speed >= i*this._speedometerProperty.divFact){";
    s += "      this._addClass(speedNobNumb.nob, 'bright');";
    s += "      this._addClass(speedNobNumb.numb, 'bright');";
    s += "    }else{";
    s += "      this._removeClass(speedNobNumb.nob, 'bright');";
    s += "      this._removeClass(speedNobNumb.numb, 'bright');";
    s += "    }";
    s += "  }";
    s += "};";

    return s;
}
